<?xml version="1.0"?>
<ruleset>
	<arg name="tab-width" value="4"/>
	<arg name="colors"/>
	<exclude-pattern>*vendor/*</exclude-pattern>
	<arg name="basepath" value="."/>

	<rule ref="PSR1">
		<exclude name="PSR1.Classes.ClassDeclaration"/>
	</rule>

	<rule ref="Generic.Files.LineEndings"/>

	<!-- В конце должна быть пустая строка -->
	<rule ref="PSR2.Files.EndFileNewline"/>

	<!-- Закрывающий тег должен отсутствовать в файлах, где только PHP код -->
	<rule ref="PSR2.Files.ClosingTag"/>

	<!-- Строка должна быть не длинее 130 символов -->
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="130"/>
			<property name="absoluteLineLimit" value="0"/>
		</properties>
	</rule>

	<!-- В конце строки не должно быть пробелов и запрещено несолько пустых строк подряд -->
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
		<properties>
			<property name="ignoreBlankLines" value="false"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
		<severity>0</severity>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
		<severity>0</severity>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
		<severity>10</severity>
	</rule>

	<!-- В каждой строке должно быть не более одного оперетора -->
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>

	<!-- Для отступов должны использоваться табуляция -->
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="tabIndent" value="true"/>
			<property name="ignoreIndentationTokens" type="array">
				<element value="T_COMMENT"/>
				<element value="T_DOC_COMMENT_OPEN_TAG"/>
			</property>
		</properties>
	</rule>
	<!-- Запрет на использование пробела как отступ -->
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

	<!-- Все ключевые слова, константы, типы параметров и возвращаемое значение должны быть в нижнем регистре -->
	<rule ref="Generic.PHP.LowerCaseKeyword"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.PHP.LowerCaseType"/>

	<!-- Имя класса и его родителя с интерфейсом должны находиться на одной строке. { находится на след строке -->
	<rule ref="PSR2.Classes.ClassDeclaration"/>

	<!-- Имена свойств не должны иметь префикса с подчеркиванием для указания видимости -->
	<rule ref="PSR2.Classes.PropertyDeclaration"/>

	<!-- Во всех методах должна быть определена видимость -->
	<rule ref="Squiz.Scope.MethodScope"/>
	<!-- После ключевых слов видимости должен быть один пробел -->
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

	<!-- Method names MUST NOT be prefixed with a single underscore to indicate protected or private visibility. That is, an underscore prefix explicitly has no meaning. -->
	<rule ref="PSR2.Methods.MethodDeclaration"/>

	<!-- Method and function names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->
	<rule ref="PSR2.Methods.FunctionClosingBrace"/>
	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

	<!-- 4.5 Method and function Arguments -->

	<!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
		<properties>
			<property name="equalsSpacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
		<severity>0</severity>
	</rule>

	<!-- Method and function arguments with default values MUST go at the end of the argument list. -->
	<rule ref="PEAR.Functions.ValidDefaultValue"/>

	<!-- Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. When the argument list is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->
	<rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

	<!-- When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis, there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
	<!-- Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. A single argument being split across multiple lines (as might be the case with an anonymous function or array) does not constitute splitting the argument list itself. -->
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="PSR2.Methods.FunctionCallSignature"/>
	<rule ref="PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket">
		<severity>0</severity>
	</rule>
	<rule ref="PSR2.Methods.FunctionCallSignature.OpeningIndent">
		<severity>0</severity>
	</rule>

	<!-- The general style rules for control structures are as follows:
	There MUST be one space after the control structure keyword
	There MUST NOT be a space after the opening parenthesis
	There MUST NOT be a space before the closing parenthesis
	There MUST be one space between the closing parenthesis and the opening brace
	The structure body MUST be indented once
	The closing brace MUST be on the next line after the body
	The body of each structure MUST be enclosed by braces. This standardizes how the structures look, and reduces the likelihood of introducing errors as new lines get added to the body. -->
	<rule ref="Squiz.ControlStructures.ControlSignature"/>
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen"/>
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose"/>
	<rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
	<rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
	<rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
		<severity>0</severity>
	</rule>
	<rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
		<severity>0</severity>
	</rule>
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
	<rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>

	<!-- exclude this message as it is already checked in Generic.PHP.LowerCaseKeyword -->
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower">
		<severity>0</severity>
	</rule>

	<!-- The keyword elseif SHOULD be used instead of else if so that all control keywords look like single words. -->
	<rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>

	<!-- The case statement MUST be indented once from switch, and the break keyword (or other terminating keywords) MUST be indented at the same level as the case body. There MUST be a comment such as // no break when fall-through is intentional in a non-empty case body. -->
	<rule ref="PSR2.ControlStructures.SwitchDeclaration"/>

	<rule ref="Generic.Formatting.SpaceAfterCast">
		<properties>
			<property name="spacing" value="1"/>
		</properties>
	</rule>

	<rule ref="Generic.Formatting.SpaceAfterNot">
		<properties>
			<property name="spacing" value="0"/>
		</properties>
	</rule>

	<rule ref="Generic.Metrics.NestingLevel"/>

	<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>

	<rule ref="Generic.Strings.UnnecessaryStringConcat">
		<properties>
			<property name="allowMultiline" value="true"/>
		</properties>
	</rule>

	<rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>

	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent">
		<properties>
			<property name="indent" value="4"/>
		</properties>
	</rule>

	<rule ref="Squiz.ControlStructures.ControlSignature">
		<properties>
			<property name="requiredSpacesBeforeColon" value="0"/>
		</properties>
	</rule>

	<rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="spacing" value="1"/>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>

	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>

	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>
</ruleset>
